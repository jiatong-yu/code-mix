# Config for single device LoRA DPO alignment in lora_dpo_single_device.py
# using a Llama2 7B model
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download meta-llama/Meta-Llama-3.1-8B-Instruct --output-dir /tmp/Meta-Llama-3.1-8B-Instruct --ignore-patterns "original/consolidated.00.pth"
#
# To launch on a single device, run the following command from root:
#   tune run lora_dpo_single_device --config llama3_1/8B_lora_dpo_single_device
#
# You can add specific overrides through the command line. For example
# to override the checkpointer directory while launching training
# you can run:
#   tune run lora_dpo_single_device --config llama3_1/8B_lora_dpo_single_device checkpointer.checkpoint_dir=<YOUR_CHECKPOINT_DIR>
#
# This config works only for training on single device.

output_dir: ./models/Qwen2.5-14B-Instruct/dpo
model_path: /scratch/gpfs/jiatongy/.cache/Qwen2.5-14B-Instruct

# Model Arguments
model:
  _component_: torchtune.models.qwen2_5.lora_qwen2_5_14b_instruct
  lora_attn_modules: ['q_proj', 'v_proj', 'output_proj']
  apply_lora_to_mlp: True
  apply_lora_to_output: False
  lora_rank: 8  # higher increases accuracy and memory
  lora_alpha: 16  # usually alpha=2*rank
  lora_dropout: 0.0

# Tokenizer
tokenizer:
  _component_: torchtune.models.qwen2_5.qwen2_5_tokenizer
  path: /scratch/gpfs/jiatongy/.cache/Qwen2.5-14B-Instruct/vocab.json
  merges_file: /scratch/gpfs/jiatongy/.cache/Qwen2.5-14B-Instruct/merges.txt
  max_seq_len: null

checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: /scratch/gpfs/jiatongy/.cache/Qwen2.5-14B-Instruct
  checkpoint_files: [
    model-00001-of-00008.safetensors,
    model-00002-of-00008.safetensors,
    model-00003-of-00008.safetensors,
    model-00004-of-00008.safetensors,
    model-00005-of-00008.safetensors,
    model-00006-of-00008.safetensors,
    model-00007-of-00008.safetensors,
    model-00008-of-00008.safetensors,
  ]
  recipe_checkpoint: null
  output_dir: ${output_dir}
  model_type: QWEN2
  
resume_from_checkpoint: False
save_adapter_weights_only: False

# Dataset and Sampler
dataset:
  _component_: torchtune.datasets.preference_dataset
  source: json
  data_files: /scratch/gpfs/jiatongy/code-skill-mix/training_data/Qwen2.5-14B-Instruct/core/dpo.json
  column_map:
    chosen: chosen_conversations
    rejected: rejected_conversations
  train_on_input: False
seed: null
shuffle: True
batch_size: 1

# Optimizer and Scheduler
optimizer:
  _component_: torch.optim.AdamW
  fused: True
  weight_decay: 0.05
  lr: 5e-4
lr_scheduler:
  _component_: torchtune.training.lr_schedulers.get_cosine_schedule_with_warmup
  num_warmup_steps: 100

loss:
  _component_: torchtune.rlhf.loss.DPOLoss

# Training
epochs: 1
max_steps_per_epoch: 1000
gradient_accumulation_steps: 32  # Use to increase effective batch size
compile: False  # torch.compile the model + loss, True increases speed + decreases memory

# Logging
metric_logger:
  # _component_: torchtune.training.metric_logging.DiskLogger
  # log_dir: ${output_dir}/logs
  _component_: torchtune.training.metric_logging.WandBLogger
  # the W&B project to log to
  project: code_skillmix-qwen14b
log_every_n_steps: 1
log_peak_memory_stats: True

# Environment
device: cuda
dtype: bf16

# Memory management
enable_activation_checkpointing: True  # True reduces memory
enable_activation_offloading: False  # True reduces memory
