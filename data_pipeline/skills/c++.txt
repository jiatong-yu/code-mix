basic_syntax_and_structure_of_c++
functions_and_function_overloading_in_c++
recursion_in_c++
pointers_and_memory_management_in_c++
dynamic_memory_allocation_with_new_delete
arrays_and_multidimensional_arrays_in_c++
object_oriented_programming_in_c++_classes_and_objects
constructors_destructors_and_lifecycle_of_objects_in_c++
operator_overloading_in_c++
inheritance_and_polymorphism_in_c++
virtual_functions_and_abstract_classes_in_c++
templates_in_c++_function_and_class_templates
exception_handling_in_c++_try_catch_throw
namespaces_in_c++_managing_scope_and_access
input_output_streams_in_c++_file_handling
standard_template_library_stl_in_c++_containers_algorithms_iterators
working_with_vectors_and_lists_in_stl
working_with_stacks_and_queues_in_stl
maps_and_sets_in_stl_associative_containers
iterators_in_stl_and_range_based_loops_in_c++
lambdas_and_functional_programming_in_c++
multithreading_and_concurrency_in_c++
smart_pointers_unique_ptr_shared_ptr_in_c++
advanced_memory_management_techniques_in_c++
move_semantics_and_rvalue_references_in_c++
working_with_algorithms_in_c++_standard_algorithms
profiling_and_performance_optimizations_in_c++
advanced_template_metaprogramming_in_c++
concepts_and_constraints_in_modern_c++
design_patterns_in_c++_creational_structural_behavioral
compile_time_vs_runtime_efficiency_in_c++
interfacing_c++_with_c_and_other_languages
building_large_scale_projects_with_cmake
c++20_features_modules_coroutines_ranges_concepts